!function(a){var b=new Array,c=new Array;a.fn.doAutosize=function(b){var c=a(this).data("minwidth"),d=a(this).data("maxwidth"),e="",f=a(this),g=a("#"+a(this).data("tester_id"));if(e!==(e=f.val())){var h=e.replace(/&/g,"&amp;").replace(/\s/g," ").replace(/</g,"&lt;").replace(/>/g,"&gt;");g.html(h);var i=g.width(),j=i+b.comfortZone>=c?i+b.comfortZone:c,k=f.width(),l=k>j&&j>=c||j>c&&d>j;l&&f.width(j)}},a.fn.resetAutosize=function(b){var c=a(this).data("minwidth")||b.minInputWidth||a(this).width(),d=a(this).data("maxwidth")||b.maxInputWidth||a(this).closest(".tagsinput").width()-b.inputPadding,e=a(this),f=a("<tester/>").css({position:"absolute",top:-9999,left:-9999,width:"auto",fontSize:e.css("fontSize"),fontFamily:e.css("fontFamily"),fontWeight:e.css("fontWeight"),letterSpacing:e.css("letterSpacing"),whiteSpace:"nowrap"}),g=a(this).attr("id")+"_autosize_tester";!a("#"+g).length>0&&(f.attr("id",g),f.appendTo("body")),e.data("minwidth",c),e.data("maxwidth",d),e.data("tester_id",g),e.css("width",c)},a.fn.addTag=function(d,e){return e=jQuery.extend({focus:!1,callback:!0},e),this.each(function(){var f=a(this).attr("id"),g=a(this).val().split(b[f]);if(""==g[0]&&(g=new Array),d=jQuery.trim(d),e.unique){var h=a(this).tagExist(d);1==h&&a("#"+f+"_tag").addClass("not_valid")}else var h=!1;if(""!=d&&1!=h){if(a("<span>").addClass("tag").append(a("<span>").text(d).append("&nbsp;&nbsp;"),a("<a>",{href:"#",title:"Removing tag",text:"x"}).click(function(){return a("#"+f).removeTag(escape(d))})).insertBefore("#"+f+"_addTag"),g.push(d),a("#"+f+"_tag").val(""),e.focus?a("#"+f+"_tag").focus():a("#"+f+"_tag").blur(),a.fn.tagsInput.updateTagsField(this,g),e.callback&&c[f]&&c[f].onAddTag){var i=c[f].onAddTag;i.call(this,d)}if(c[f]&&c[f].onChange){var j=g.length,i=c[f].onChange;i.call(this,a(this),g[j-1])}}}),!1},a.fn.removeTag=function(d){return d=unescape(d),this.each(function(){var e=a(this).attr("id"),f=a(this).val().split(b[e]);for(a("#"+e+"_tagsinput .tag").remove(),str="",i=0;i<f.length;i++)f[i]!=d&&(str=str+b[e]+f[i]);if(a.fn.tagsInput.importTags(this,str),c[e]&&c[e].onRemoveTag){var g=c[e].onRemoveTag;g.call(this,d)}}),!1},a.fn.tagExist=function(c){var d=a(this).attr("id"),e=a(this).val().split(b[d]);return jQuery.inArray(c,e)>=0},a.fn.importTags=function(b){var c=a(this).attr("id");a("#"+c+"_tagsinput .tag").remove(),a.fn.tagsInput.importTags(this,b)},a.fn.tagsInput=function(e){var f=jQuery.extend({interactive:!0,defaultText:"add a tag",minChars:0,width:"300px",height:"100px",autocomplete:{selectFirst:!1},hide:!0,delimiter:",",unique:!0,removeWithBackspace:!0,placeholderColor:"#666666",autosize:!0,comfortZone:20,inputPadding:12},e),g=0;return this.each(function(){if("undefined"==typeof a(this).attr("data-tagsinput-init")){a(this).attr("data-tagsinput-init",!0),f.hide&&a(this).hide();var e=a(this).attr("id");(!e||b[a(this).attr("id")])&&(e=a(this).attr("id","tags"+(new Date).getTime()+g++).attr("id"));var h=jQuery.extend({pid:e,real_input:"#"+e,holder:"#"+e+"_tagsinput",input_wrapper:"#"+e+"_addTag",fake_input:"#"+e+"_tag"},f);b[e]=h.delimiter,(f.onAddTag||f.onRemoveTag||f.onChange)&&(c[e]=new Array,c[e].onAddTag=f.onAddTag,c[e].onRemoveTag=f.onRemoveTag,c[e].onChange=f.onChange);var i='<div id="'+e+'_tagsinput" class="tagsinput"><div id="'+e+'_addTag">';if(f.interactive&&(i=i+'<input id="'+e+'_tag" value="" data-default="'+f.defaultText+'" />'),i+='</div><div class="tags_clear"></div></div>',a(i).insertAfter(this),a(h.holder).css("width",f.width),a(h.holder).css("min-height",f.height),a(h.holder).css("height",f.height),""!=a(h.real_input).val()&&a.fn.tagsInput.importTags(a(h.real_input),a(h.real_input).val()),f.interactive){if(a(h.fake_input).val(a(h.fake_input).attr("data-default")),a(h.fake_input).css("color",f.placeholderColor),a(h.fake_input).resetAutosize(f),a(h.holder).bind("click",h,function(b){a(b.data.fake_input).focus()}),a(h.fake_input).bind("focus",h,function(b){a(b.data.fake_input).val()==a(b.data.fake_input).attr("data-default")&&a(b.data.fake_input).val(""),a(b.data.fake_input).css("color","#000000")}),void 0!=f.autocomplete_url){autocomplete_options={source:f.autocomplete_url};for(attrname in f.autocomplete)autocomplete_options[attrname]=f.autocomplete[attrname];void 0!==jQuery.Autocompleter?(a(h.fake_input).autocomplete(f.autocomplete_url,f.autocomplete),a(h.fake_input).bind("result",h,function(b,c,d){c&&a("#"+e).addTag(c[0]+"",{focus:!0,unique:f.unique})})):void 0!==jQuery.ui.autocomplete&&(a(h.fake_input).autocomplete(autocomplete_options),a(h.fake_input).bind("autocompleteselect",h,function(b,c){return a(b.data.real_input).addTag(c.item.value,{focus:!0,unique:f.unique}),!1}))}else a(h.fake_input).bind("blur",h,function(b){var c=a(this).attr("data-default");return""!=a(b.data.fake_input).val()&&a(b.data.fake_input).val()!=c?b.data.minChars<=a(b.data.fake_input).val().length&&(!b.data.maxChars||b.data.maxChars>=a(b.data.fake_input).val().length)&&a(b.data.real_input).addTag(a(b.data.fake_input).val(),{focus:!0,unique:f.unique}):(a(b.data.fake_input).val(a(b.data.fake_input).attr("data-default")),a(b.data.fake_input).css("color",f.placeholderColor)),!1});a(h.fake_input).bind("keypress",h,function(b){return d(b)?(b.preventDefault(),b.data.minChars<=a(b.data.fake_input).val().length&&(!b.data.maxChars||b.data.maxChars>=a(b.data.fake_input).val().length)&&a(b.data.real_input).addTag(a(b.data.fake_input).val(),{focus:!0,unique:f.unique}),a(b.data.fake_input).resetAutosize(f),!1):void(b.data.autosize&&a(b.data.fake_input).doAutosize(f))}),h.removeWithBackspace&&a(h.fake_input).bind("keydown",function(b){if(8==b.keyCode&&""==a(this).val()){b.preventDefault();var c=a(this).closest(".tagsinput").find(".tag:last").text(),d=a(this).attr("id").replace(/_tag$/,"");c=c.replace(/[\s]+x$/,""),a("#"+d).removeTag(escape(c)),a(this).trigger("focus")}}),a(h.fake_input).blur(),h.unique&&a(h.fake_input).keydown(function(b){(8==b.keyCode||String.fromCharCode(b.which).match(/\w+|[áéíóúÁÉÍÓÚñÑ,/]+/))&&a(this).removeClass("not_valid")})}}}),this},a.fn.tagsInput.updateTagsField=function(c,d){var e=a(c).attr("id");a(c).val(d.join(b[e]))},a.fn.tagsInput.importTags=function(d,e){a(d).val("");var f=a(d).attr("id"),g=e.split(b[f]);for(i=0;i<g.length;i++)a(d).addTag(g[i],{focus:!1,callback:!1});if(c[f]&&c[f].onChange){var h=c[f].onChange;h.call(d,d,g[i])}};var d=function(b){var c=!1;return 13==b.which?!0:("string"==typeof b.data.delimiter?b.which==b.data.delimiter.charCodeAt(0)&&(c=!0):a.each(b.data.delimiter,function(a,d){b.which==d.charCodeAt(0)&&(c=!0)}),c)}}(jQuery);

//
$(function () {
    $.extend({
        initAttr: function (param) {
            var opt = {
                id: '',
                name: '',
                value: ''
            };
            $.extend(opt, param);
            var objAttribute = {
                id: '',
                name: '',
                array: [],
                init: function (id, name, value) {
                    var self = this;
                    self.id = id;
                    self.name = name;
                    if (value != '') {
                        var row = value.split('|');
                        $.each(row, function (i, item) {
                            var arr = item.split(':');
                            self.array.push({
                                name: arr[0],
                                value: arr[1]
                            })
                        });
                    }
                    self.render();
                },
                render: function () {
                    var self = this;
                    $("#" + self.id).html('');
                    $.each(self.array, function (i, item) {
                        self.addRow(i, item)
                    });
                    self.addButton();
                    self.event();
                },
                addRow: function (i, obj) {
                    var self = this;
                    var v = obj.value.replace(/;/g, "\n");
                    var rows = [];
                    rows.push('<div class="row rowlr" style="margin-top:2px;">');
                    rows.push('    <div class="col-xs-6 col-sm-3 pl-0 pr-1"><input class="form-control name" data-index="' + i + '" value="' + obj.name + '" placeholder="属性名" /></div>');
                    rows.push('    <div class="col-xs-10 col-sm-8 pl-0 pr-0">');
                    rows.push('        <input type="text" class="form-control w-100 tags" data-index="' + i + '" placeholder="输入后按回车" value="' + obj.value + '" />');
                    rows.push('    </div>');
                    rows.push('    <div class="col-xs-2 col-sm-1 pl-0 pr-0 text-center">');
                    rows.push('        <a class="moveUp" data-index="' + i + '" href="javascript:;" style="display: inline-block;white-space: nowrap;">上移</a>');
                    rows.push('        <a class="moveDown" data-index="' + i + '" href="javascript:;" style="display: inline-block;white-space: nowrap;">下移</a>');
                    rows.push('        <a class="remove" data-index="' + i + '" href="javascript:;" style="display: inline-block;white-space: nowrap;">移除</a>');
                    rows.push('    </div>');
                    rows.push('</div>');
                    $("#" + self.id).append(rows.join(''));
                },
                addButton: function () {
                    var self = this;
                    var rows = [];
                    rows.push('<div class="row">');
                    rows.push('    <div class="col-xs-12 col-sm-3"><input name="' + self.name + '" type="hidden" /></div>');
                    rows.push('    <div class="col-xs-12 col-sm-9 pl-2"><a class="addRow" href="javascript:;">添加一行属性</a></div>');
                    rows.push('</div>');
                    $("#" + self.id).append(rows.join(''));
                },
                event: function () {
                    var self = this;
                    $("#" + self.id + " .addRow").unbind("click").on("click", function () {
                        self.array.push({ name: '', value: '' });
                        self.render();
                    });
                    $("#" + self.id + " .remove").unbind("click").on("click", function () {
                        var _this = this;
                        win.confirm("确定移除吗？", function () {
                            var index = parseInt($(_this).data("index"));
                            var arr = [];
                            $.each(self.array, function (i, item) {
                                if (index == i) {
                                    return;
                                };
                                arr.push(item);
                            });
                            self.array = arr;
                            self.render();
                        });
                    });
                    $("#" + self.id + " .moveUp").unbind("click").on("click", function () {
                        var index = parseInt($(this).data("index"));
                        if (index == 0) {
                            return;
                        }
                        var obj = self.array[index];
                        self.array.splice(index, 1);
                        self.array.splice(index - 1, 0, obj);
                        self.render();
                    });
                    $("#" + self.id + " .moveDown").unbind("click").on("click", function () {
                        var index = parseInt($(this).data("index"));
                        if (index == self.array.length - 1) {
                            return;
                        }
                        var obj = self.array[index];
                        self.array.splice(index, 1);
                        self.array.splice(index + 1, 0, obj);
                        self.render();
                    });
                    $("#" + self.id + " .name").unbind("keyup").on("keyup", function () {
                        var index = parseInt($(this).data("index"));
                        if (self.array.length > index) {
                            var name = ($(this).val()||"").replace(/[;\|:]/g, "");
                            $(this).val(name);
                            self.array[index].name = name;
                        }
                        self.setNameValue();
                    });
                    $("#" + self.id + " .tags").each(function (i, item) {
                        $(this).tagsInput({
                            width: '100%',
                            'height': '65px',
                            'interactive': true,
                            'defaultText': '',
                            'onAddTag': function () { self.setNameValue(); },
                            'onRemoveTag': function () { self.setNameValue(); },
                            'delimiter': [';'],
                            'removeWithBackspace': true,
                            'minChars': 0,
                            'maxChars': 0,
                            'placeholderColor': '#666666'
                        });
                    });

                    self.setNameValue();
                },
                setNameValue: function () {
                    var self = this;
                    var array = [];
                    var arrs = [];
                    $("#" + self.id + " .name").each(function (i, item) {
                        var name = $.trim($(this).val());
                        var tagsDiv = $(this).parent().parent().find(".tag span");
                        var tags = [];
                        $.each(tagsDiv, function (i, item) {
                            var v = $.trim($(item).text());
                            if (v != '')
                                tags.push(v);
                        });

                        var val = $.trim(tags.join(';'));
                        arrs.push({
                            name: name,
                            value: tags.join(';')
                        });

                        if (name != '' && val != '') {
                            array.push(name + ":" + val);

                        }
                    });
                    self.array = arrs;

                    $("#" + self.id + ' [name="' + self.name + '"]').val(array.join('|'));
                }
            };
            if (opt.value == '') {
                opt.value = ':';
            }
            objAttribute.init(opt.id, opt.name, opt.value);
        }
    });
});
